package Pack;
/*
//abstract class Animal{
//abstract void m1(); 
//} 누군가의 가이드역활은 가능하지만 class로서 역활이 없다.
interface Animal{
//void m1();  -  {}없는 "미완성 코드"
abstract void m1();
//abstract - 추상, 미완성
//abstract을 안 적을 경우 자동으로 생략된다.
}
class Tiger implements Animal{
//인터페이스의 경우 extends가 아닌 implements를 사용
//클래스와 인터페이스를 두개 다 사용가능할 경우 인터페이스로 하는것이 좋다.
public void m1() {
	//implements의 경우 public사용
	System.out.println(2);
}//부모 클래스가 abstract이면 Tiger 클래스에 아무것도 없을 경우 에러가 생김

}
public class No39_Interface 
{
public static void main(String[] args) {
	Animal a = new Tiger();
	a.m1();
	//Animal t2 = new Animal(); 미완성코드이기에 객체 생성 불가
}
}

*/
